{
  "name": "Live Broadcast Bundle",
  "tagline": "Making live streaming easy, fast and manageable",
  "body": "Live Broadcast Bundle\r\n=====================\r\n\r\n*This project is still in experimental phase and in no way production ready.\r\nUsage should be limited to development work.*\r\n\r\n[![Build Status](https://travis-ci.org/Martin1982/live-broadcast-bundle.svg?branch=master)](https://travis-ci.org/Martin1982/live-broadcast-bundle)\r\n[![SensioLabsInsight](https://insight.sensiolabs.com/projects/6027a50f-06cf-4989-8267-9f481e838b2a/mini.png)](https://insight.sensiolabs.com/projects/6027a50f-06cf-4989-8267-9f481e838b2a)\r\n\r\n[![Latest Stable Version](https://poser.pugx.org/martin1982/live-broadcast-bundle/v/stable)](https://packagist.org/packages/martin1982/live-broadcast-bundle)\r\n[![Total Downloads](https://poser.pugx.org/martin1982/live-broadcast-bundle/downloads)](https://packagist.org/packages/martin1982/live-broadcast-bundle)\r\n[![Latest Unstable Version](https://poser.pugx.org/martin1982/live-broadcast-bundle/v/unstable)](https://packagist.org/packages/martin1982/live-broadcast-bundle)\r\n[![License](https://poser.pugx.org/martin1982/live-broadcast-bundle/license)](https://packagist.org/packages/martin1982/live-broadcast-bundle)\r\n\r\nThe Live Broadcast Bundle will make it possible to plan live streams to\r\nvarious channels like Twitch, YouTube and Facebook (referred to as Output or Channels).\r\n\r\nThe basic \"Input\" will be a file that can be read. Other inputs will be created thereafter.\r\n\r\n## Prerequisites\r\n\r\nThe Broadcaster needs a few commands;\r\n\r\n* `ffmpeg`\r\n\r\nOn Linux:\r\n* `ps`\r\n* `kill`\r\n\r\nOn Mac:\r\n* `ps`\r\n* `grep`\r\n* `kill`\r\n\r\nOn Windows:\r\n* `tasklist`\r\n* `taskkill`\r\n\r\nTo test these prerequisites the Symfony command `livebroadcaster:test:shell` can be used after the installation described below.\r\n\r\n## Installation\r\n\r\n### Step 1: Download Bundle\r\n\r\nThis bundle will be made available on Packagist. You can then install it using Composer:\r\n\r\n```bash\r\n$ composer require martin1982/live-broadcast-bundle\r\n```\r\n\r\n### Step 2: Enable the bundle\r\n\r\nNext, enable the bundle in the kernel:\r\n\r\n``` php\r\n<?php\r\n// app/AppKernel.php\r\n\r\npublic function registerBundles()\r\n{\r\n    $bundles = array(\r\n        // ...\r\n        new Martin1982\\LiveBroadcastBundle\\LiveBroadcastBundle(),\r\n    );\r\n}\r\n```\r\n\r\n### Step 3: Update your database schema\r\n\r\nUse doctrine to update your database schema with the broadcasting entities\r\n\r\n### Step 4 (Optional): Activate the Sonata Admin module\r\n\r\nTo make planning available through an admin interface it is recommended to use the Sonata Admin bundle.\r\n\r\n### Step 5 (Optional): Start the broadcast!\r\n\r\nTo start a broadcast you can use a console command, you can add this to a cronjob to automate your broadcast schedule.\r\n\r\n```bash\r\n$ app/console livebroadcaster:broadcast\r\n```\r\n\r\n## Facebook Live\r\n\r\n### Step 1: Create a Facebook App\r\nCreate a Facebook app on https://developers.facebook.com with the following permissions:\r\n\r\n- user_videos\r\n- user_events\r\n- user_managed_groups\r\n- manage_pages\r\n- publish_actions\r\n- Live-Video API\r\n\r\n### Step 2: Add your App ID and Secret to app/config/parameters.yml\r\n    parameters:\r\n        live_broadcast_fb_app_id: '{application_id}'\r\n        live_broadcast_fb_app_secret: '{application_secret}'\r\n\r\n### Step 3: Add the Facebook application id to your config.yml:\r\n\tlive_broadcast:\r\n\t    facebook:\r\n\t        application_id: '%live_broadcast_fb_app_id%'\r\n\t        application_secret: '%live_broadcast_fb_app_secret%'\r\n\r\n### Step 4 (Sonata users only): Load the app ID in Twig\r\n    twig:\r\n        globals:\r\n            live_broadcast_facebook_app_id: '%live_broadcast_fb_app_id%'   \r\n\r\n## YouTube Live\r\n\r\n### Step 1: Request API access\r\nLogin to https://console.developers.google.com/ and enable the 'YouTube Data API v3'.\r\n\r\nSetup oAuth Credentials for your server. In case you're using the Sonata Admin from this\r\nbundle the redirect URI's path is `<your domain>/admin/channel/youtube/oauthprovider`\r\n\r\n### Step 2: Add your Client ID and Secret and redirect route to app/config/parameters.yml\r\n    parameters:\r\n        live_broadcast_yt_client_id: '{application_id}'\r\n        live_broadcast_yt_client_secret: '{application_secret}'\r\n        live_broadcast_yt_redirect_route: '{your_oauth_handler_url or admin_martin1982_livebroadcast_channel_basechannel_youtubeoauth}'\r\n\r\n### Step 3: Add the YouTube API info to your config.yml:\r\n\tlive_broadcast:\r\n\t    youtube:\r\n            client_id: '%live_broadcast_yt_client_id%'\r\n            client_secret: '%live_broadcast_yt_client_secret%'\r\n            redirect_route: '%live_broadcast_yt_redirect_route%'\r\n\r\n### Step 4 (Sonata users only): Add the Sonata block to your blocks config:\r\n    \r\n    sonata_block:\r\n        blocks:\r\n        sonata.block.service.youtubeauth:\r\n            contexts:   [admin]\r\n             \r\n## Add new output platforms\r\n\r\n### Step 1: Create a new Channel Entity in Entity/Channel that extends the BaseChannel (for e.g. ChannelNew)\r\n\r\n### Step 2: Create a new StreamOutput service in Service/StreamOutput that implements the OutputInterface (for e.g. OutputNew)\r\n\r\n### Step 3: Configure the service with the output tag in Resources/config/services.yml\r\n    live.broadcast.output.new:\r\n        class: Martin1982\\LiveBroadcastBundle\\Service\\StreamOutput\\OutputNew\r\n        tags:\r\n            - { name: live.broadcast.output, platform: 'New' }\r\n\r\n### Step 4: (Optional) Add a new form for the Channel in Admin/ChannelAdmin.php\r\n``` php\r\nprotected function configureFormFields(FormMapper $formMapper)\r\n{\r\n    if ($subject instanceof ChannelNew) {\r\n        $formMapper->add('...', 'text', array('label' => '...'));\r\n    }\r\n}\r\n```\r\n\r\n### Step 5: (Optional) Add the sub class for the channelAdmin in Resources/config/admin.yml for \r\n    sonata.admin.channel\r\n        calls:\r\n            - [setSubClasses, [ { \"Name\": Martin1982\\LiveBroadcastBundle\\Entity\\Channel\\ChannelNew } ] ]\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}